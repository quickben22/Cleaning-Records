<Window x:Class="CleaningRecords.Moduli.ClientEditWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CleaningRecords.Moduli"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="CLIENT DETAILS" Height="450" Width="1500" WindowState="Maximized">
    <Window.Resources>
        <local:CleanersList x:Key="CleanersList"/>
        <local:TeamsList x:Key="TeamsList"/>
        <local:JobStatusList x:Key="JobStatusList"/>
        <local:ServicesList x:Key="ServicesList"/>
        <local:ServicesListWithAll x:Key="ServicesListWithAll"/>
        <local:JobStatusWithNullList x:Key="JobStatusWithNullList"/>
        <local:CleanersWithAllList x:Key="CleanersWithAllList"/>

    </Window.Resources>
    <Grid Margin="20">
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
            <ColumnDefinition Width="110" ></ColumnDefinition>
        </Grid.ColumnDefinitions>-->
        <Grid.RowDefinitions>
            <RowDefinition Height="90" ></RowDefinition>
            <RowDefinition Height="150" ></RowDefinition>
            <RowDefinition Height="*"  ></RowDefinition>
            <RowDefinition Height="150" ></RowDefinition>

        </Grid.RowDefinitions>


        <TextBlock VerticalAlignment="Center" FontWeight="Bold" FontSize="24" Margin="10,0,10,10" Grid.Row="0" Width="150" Grid.Column="0" HorizontalAlignment="Left" Text="{Binding ClientNumber, UpdateSourceTrigger=PropertyChanged}"  />
        <TextBlock FontWeight="Bold" FontSize="24" Margin="172,24,0,0" Grid.Row="0" Width="150" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"  />
        <TextBlock HorizontalAlignment="Left" Margin="400,-10,0,0" Text="FILTER:" FontSize="17" FontWeight="Bold" TextWrapping="Wrap" VerticalAlignment="Center"/>
        <Rectangle HorizontalAlignment="Left" Height="90" Margin="480,0,0,0" StrokeThickness="3" Grid.RowSpan="2" Stroke="Black" VerticalAlignment="Top" Width="630"/>

        <TextBlock HorizontalAlignment="Left" Margin="510,10,0,0" Text="Year:" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <ComboBox SelectionChanged="ComboBox_SelectionChanged"  ItemsSource="{Binding Years}"  SelectedValue="{Binding Year, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="550,5,0,0"   Width="100"/>
        <TextBlock HorizontalAlignment="Left" Margin="700,10,0,0" Text="Month:" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <ComboBox SelectionChanged="ComboBox_SelectionChanged"  ItemsSource="{Binding Months}"  SelectedValue="{Binding Month, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="750,5,0,0"   Width="120"/>
        <TextBlock HorizontalAlignment="Left" Margin="900,10,0,0" Text="Status:" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <ComboBox SelectionChanged="ComboBox_SelectionChanged"  ItemsSource="{Binding Source={StaticResource JobStatusWithNullList}}"   SelectedValue="{Binding Status, UpdateSourceTrigger=PropertyChanged}"  SelectedValuePath="Key" DisplayMemberPath="Value" HorizontalAlignment="Left" Margin="950,5,0,0"   Width="120" VerticalAlignment="Top" />
        <TextBlock HorizontalAlignment="Left" Margin="496,50,0,0" Text="Service:" TextWrapping="Wrap" VerticalAlignment="Top" />
        <ComboBox VerticalAlignment="Top"  SelectionChanged="ComboBox_SelectionChanged"  ItemsSource="{Binding Source={StaticResource ServicesListWithAll}}"   SelectedValue="{Binding Service, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" HorizontalAlignment="Left" Margin="550,45,0,0"   Width="120"/>
        <TextBlock HorizontalAlignment="Left" Margin="730,50,0,0" Text="Cleaner:" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <ComboBox VerticalAlignment="Top"  SelectionChanged="ComboBox_SelectionChanged"   ItemsSource="{Binding Source={StaticResource CleanersWithAllList}}"  SelectedValue="{Binding Cleaner, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  HorizontalAlignment="Left" Margin="790,45,0,0"   Width="120"/>


        <TextBlock Margin="10,10,10,10" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top">Adresa 2</TextBlock>

        <TextBox  Margin="80,5,10,10" Grid.Column="1" Grid.Row="1" Width="300" TextAlignment="Left"  Background="Transparent"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Address2, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock Margin="10,60,10,10" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top">Adresa 3</TextBlock>

        <TextBox Grid.Row="1"   Margin="80,55,10,10"  Width="300"   Background="Transparent"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Address3, UpdateSourceTrigger=PropertyChanged}"  />
        <TextBlock Grid.Row="1"  Margin="10,110,10,10"  HorizontalAlignment="Left" VerticalAlignment="Top">Adresa 4</TextBlock>

        <TextBox Grid.Row="1"  Margin="80,105,10,10"   Width="300"   Background="Transparent"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Address4, UpdateSourceTrigger=PropertyChanged}" />


        <TextBlock Grid.Row="1"  Margin="480,10,10,10" HorizontalAlignment="Left" VerticalAlignment="Top">Instructions</TextBlock>

        <TextBox Grid.Row="1"   Margin="480,40,10,10"  TextWrapping="Wrap" AcceptsReturn="True" Width="230" Height="90"  TextAlignment="Center"  Background="Transparent"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Instructions, UpdateSourceTrigger=PropertyChanged}"  />
        <TextBlock Grid.Row="1"  Margin="760,10,10,10"  HorizontalAlignment="Left" VerticalAlignment="Top">Description</TextBlock>

        <TextBox Grid.Row="1"     Margin="760,40,10,10"   TextWrapping="Wrap" AcceptsReturn="True" Width="230" Height="90"  TextAlignment="Center"  Background="Transparent"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"  />



        <DataGrid Grid.Row="2" FontWeight="SemiBold" AlternatingRowBackground="AliceBlue" x:Name="dataGrid"  ItemsSource="{Binding Source=ClientJobs}"  CanUserAddRows="false" AutoGenerateColumns="False">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <!--<DataGridComboBoxColumn Header="Location"  ItemsSource="{Binding Locations}" SelectedValueBinding="{Binding Location, UpdateSourceTrigger=PropertyChanged}"  />-->

                <DataGridComboBoxColumn Header="Location"
    SelectedValueBinding="{Binding LocationId, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="Key" DisplayMemberPath="Value"
                                        >

                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Locations, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Locations, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>


                <DataGridTemplateColumn Header="Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Date, StringFormat={}{0:d.M.yyyy.}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding Date, StringFormat={}{0:d.M.yyyy.},UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Start Time">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TimeStart,  StringFormat={}{0: H:mm}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <materialDesign:TimePicker  SelectedTimeFormat="Short" Is24Hours="True" Text="{Binding TimeStart, StringFormat={}{0: H:mm},UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="End Time">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TimeEnd, StringFormat={}{0: H:mm}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <materialDesign:TimePicker SelectedTimeFormat="Short" Is24Hours="True"  Text="{Binding TimeEnd, StringFormat={}{0: H:mm},UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>



                <DataGridTextColumn Header="No. of hours" IsReadOnly="True" Binding="{Binding NoOfHours}"/>
                <DataGridComboBoxColumn Header="Cleaner"  ItemsSource="{Binding Source={StaticResource CleanersList}}" SelectedValueBinding="{Binding CleanerId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />
                <DataGridComboBoxColumn Header="Team"  ItemsSource="{Binding Source={StaticResource TeamsList}}" SelectedValueBinding="{Binding TeamId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />
                <DataGridComboBoxColumn Header="Main Service"  ItemsSource="{Binding Source={StaticResource ServicesList}}" SelectedValueBinding="{Binding ServiceId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />

                <DataGridTextColumn Header="Amount" IsReadOnly="True" Binding="{Binding Amount}"/>
                <DataGridTextColumn Header="Repeating" IsReadOnly="True" Binding="{Binding RepeatJobId,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource RepeatJobIdConverter}}"/>

                <DataGridComboBoxColumn Header="Status"  ItemsSource="{Binding Source={StaticResource JobStatusList}}" SelectedValueBinding="{Binding JobStatus, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />


                <DataGridTemplateColumn  Header="Repeat Edit" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Height="40" Width="40" Style="{DynamicResource MaterialDesignFloatingActionAccentButton}" Click="RepeatEdit_Click">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#f2c809"/>
                                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="White"/>
                                </Button.Resources>

                                <materialDesign:PackIcon Kind="CalendarRepeat" Height="30" Width="30" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Services" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Height="40" Width="40" Style="{DynamicResource MaterialDesignFloatingActionAccentButton}" Click="Services_Click">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#8c34eb"/>
                                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="White"/>
                                </Button.Resources>

                                <materialDesign:PackIcon Kind="Cleaning" Height="30" Width="30" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Delete" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Height="40" Width="40" Style="{DynamicResource MaterialDesignFloatingActionAccentButton}" Click="Delete_Click">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#e22553"/>
                                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="White"/>
                                </Button.Resources>

                                <materialDesign:PackIcon Kind="Delete" Height="30" Width="30" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
        <!--<Button Grid.Row="3" Height="45" FontSize="22" Width="250" Margin="0,0,0,70" Click="Add_Click">NEW JOB</Button>-->

        <Button Margin="0,0,0,70"  VerticalAlignment="Center" Style="{DynamicResource MaterialDesignRaisedAccentButton}" Grid.Row="3" Height="45" FontSize="22" Width="250"  Click="Add_Click" >
         

            <StackPanel Orientation="Horizontal" >
                <materialDesign:PackIcon Kind="Work" VerticalAlignment="Center" Height="35" Width="35" />
                <TextBlock Text="NEW JOB" Margin="10,0,0,0" VerticalAlignment="Center"/>
            </StackPanel>

        </Button>

        <Button Grid.Row="3" VerticalAlignment="Center" Margin="0,70,0,0" Style="{DynamicResource MaterialDesignFloatingActionMiniButton}" Height="45" FontSize="22" Width="250"  Click="Close_Click" >


            <StackPanel Orientation="Horizontal" >
                <materialDesign:PackIcon Kind="ExitRun" VerticalAlignment="Center" Height="35" Width="35" />
                <TextBlock Text="FINISH" Margin="10,0,0,0"  FontWeight="Bold" VerticalAlignment="Center"/>
            </StackPanel>

        </Button>

  
     

    </Grid>
</Window>
