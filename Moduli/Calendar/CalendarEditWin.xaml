<Window x:Class="CleaningRecords.Moduli.CalendarEditWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CleaningRecords.Moduli"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="CalendarEditWin" Height="450" Width="800" WindowState="Maximized">

    <Window.Resources>
        <local:ClientsList x:Key="ClientsList"/>
        <local:CleanersWithAllList x:Key="CleanersWithAllList"/>
        
        <local:CleanersList x:Key="CleanersList"/>
        <local:TeamsList x:Key="TeamsList"/>
        <local:JobStatusList x:Key="JobStatusList"/>
        <local:ServicesList x:Key="ServicesList"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"  ></RowDefinition>
            <RowDefinition Height="150" ></RowDefinition>

        </Grid.RowDefinitions>
        

        <DataGrid FontWeight="SemiBold" AlternatingRowBackground="AliceBlue" Grid.Row="0" x:Name="dataGrid"   CanUserAddRows="false" AutoGenerateColumns="False">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridComboBoxColumn Header="Client"  ItemsSource="{Binding Source={StaticResource ClientsList}}" SelectedValueBinding="{Binding ClientId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />

                <DataGridComboBoxColumn Header="Location"
    SelectedValueBinding="{Binding LocationId, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="Key" DisplayMemberPath="Value"
                                     
                                        >
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=Locations}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=Locations}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
  

                </DataGridComboBoxColumn>
                <DataGridTemplateColumn Header="Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Date, StringFormat={}{0:d.M.yyyy.}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding Date, StringFormat={}{0:d.M.yyyy.},UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Start Time">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TimeStart, StringFormat={}{0: H:mm}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <materialDesign:TimePicker  SelectedTimeFormat="Short" Is24Hours="True"  Text="{Binding TimeStart, StringFormat={}{0: H:mm},UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="End Time">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TimeEnd, StringFormat={}{0: H:mm}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <materialDesign:TimePicker   SelectedTimeFormat="Short" Is24Hours="True" Text="{Binding TimeEnd, StringFormat={}{0: H:mm},UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>



                <DataGridTextColumn Header="No. of hours" IsReadOnly="True" Binding="{Binding NoOfHours}"/>
                <DataGridComboBoxColumn Header="Cleaner"  ItemsSource="{Binding Source={StaticResource CleanersList}}" SelectedValueBinding="{Binding CleanerId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />
                <DataGridComboBoxColumn Header="Team"  ItemsSource="{Binding Source={StaticResource TeamsList}}" SelectedValueBinding="{Binding TeamId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />

                <DataGridComboBoxColumn Header="Main Service"  ItemsSource="{Binding Source={StaticResource ServicesList}}" SelectedValueBinding="{Binding ServiceId, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />


                <DataGridTextColumn Header="Amount" IsReadOnly="True" Binding="{Binding Amount, UpdateSourceTrigger=PropertyChanged}"/>

                <DataGridTextColumn Header="Repeating" IsReadOnly="True" Binding="{Binding RepeatJobId,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource RepeatJobIdConverter}}"/>
                <DataGridComboBoxColumn Header="Status"  ItemsSource="{Binding Source={StaticResource JobStatusList}}" SelectedValueBinding="{Binding JobStatus, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"  />


                <DataGridTemplateColumn  >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="RepeatEdit_Click">Repeat Edit</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="Services_Click">Services</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn  >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="Delete_Click">Delete</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
        <Button Grid.Row="1" Height="45" FontSize="22" Width="250" Margin="0,0,0,70" Click="Add_Click">NEW JOB</Button>
        <Button Grid.Row="1" Height="45" FontSize="22" Width="250" Margin="0,70,0,0" Click="Close_Click">FINISH</Button>

    </Grid>
</Window>
